substitutions:
  name: motorwala-pump
  ap_password: "12345678"
  pin_clk: GPIO14
  pin_mosi: GPIO13
  pin_miso: GPIO12
  pin_dio0: GPIO5
  pin_cs: GPIO4
  pin_rst: GPIO2
  pin_pulse: GPIO0
  pin_relay: GPIO16
  id_pump_state: motor_state
  id_restart_state: restart_pressed
  
esphome:
  name: "${name}"
  friendly_name: "${name}"
  name_add_mac_suffix: True
  project:
    name: "walaworks.motorwala_pump"
    version: "1.0.1"

esp8266:
  board: esp01_1m

safe_mode:
  disabled: True

logger:

api:

ota:
  platform: esphome

dashboard_import:
  package_import_url: github://wala-works/motorwala/pump/factory.yaml@main
  import_full_config: false

wifi:
  ap:
    ssid: "${name} Hotspot"
    password: "${ap_password}"

captive_portal:

sensor:
  - platform: pulse_counter
    pin: ${pin_pulse}
    update_interval: 0.5s
    filters:
      - lambda: return (x / 450.0);
    unit_of_measurement: "L/s"
    id: flow

interval:
  - interval: 1s
    then:
      - if:
          condition:
            and:
              - binary_sensor.is_on: motor_state
              - switch.is_off: flow_relay
          then:
            - logger.log: "Motor turning ON"
            - switch.turn_on: flow_relay
      - if:
          condition:
            and:
              - binary_sensor.is_off: motor_state
              - switch.is_on: flow_relay
          then:
            - logger.log: "Motor turning OFF"
            - switch.turn_off: flow_relay
          
switch:
  - platform: gpio
    pin: ${pin_relay}
    id: flow_relay
    inverted: True
    restore_mode: RESTORE_DEFAULT_OFF

globals:
  - id: name_hub
    type: std::string
    restore_value: yes
    max_restore_data_length: 8
    initial_value: '"Hub"'
  - id: ek_pump
    type: std::string
    restore_value: yes
    max_restore_data_length: 8
    initial_value: '"Motor"'
  - id: ek_hub
    type: std::string
    restore_value: yes
    max_restore_data_length: 8
    initial_value: '"Hub"'

text:
  - platform: template
    id: name_hub_user
    name: Hub
    type: text
    on_value:
      then:
        - globals.set:
            id: name_hub
            value: !lambda id(name_hub).state.c_str();
  - platform: template
    id: ek_pump_user
    name: Encryption Key (Pump)
    mode: password
    on_value:
      then:
        - globals.set:
            id: ek_pump
            value: !lambda id(ek_pump_user).state.c_str();
  - platform: template
    id: ek_hub_user
    name: Encryption Key (Hub)
    mode: password
    on_value:
      then:
        - globals.set:
            id: ek_hub
            value: !lambda id(ek_hub_user).state.c_str();

binary_sensor:
  - platform: packet_transport
    provider: ${name_hub}
    id: ${id_pump_state}
  - platform: packet_transport
    provider: ${name_hub}
    id: ${id_restart_state}
    on_press:
      then:
        - logger.log: "Restart pressed"
        - button.press: sys_restart
        
packet_transport:
  platform: sx127x
  update_interval: 1s
  rolling_code_enable: false
  encryption: ${ek_pump}
  sensors:
    - flow
  providers:
    - name: ${name_hub}
      encryption: ${ek_hub}

packages:
  common: !include ../common.yaml
